{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(dygraphs)\nlibrary(xts)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(reshape2)\nlibrary(ggplot2)\n\nsetwd(\"E:/DATA SCIENCE/credihealth/graph data/App2\")\nspeciality_wise<-readRDS(\"speciality_wise.rda\")\ncity_wise<-readRDS(\"city_wise.rda\")\nspeciality_wise[is.na(speciality_wise)]<-0\ncity_wise[is.na(city_wise)]<-0\ndf1<-melt(speciality_wise,id.vars = c(\"Date\",\"Speciality\",\"Category\"))\ndf2<-melt(city_wise,id.vars = c(\"Date\",\"City_Name\",\"Category\"))\ndf1$Date<-as.Date(df1$Date, format=\"%m/%d/%Y\")\ndf2$Date<-as.Date(df2$Date, format=\"%m/%d/%Y\")\ndf2$City_Name<-as.factor(df2$City_Name)\ndf2$Category<-as.factor(df2$Category)\n\n\nrequest<-df1 %>% filter(variable==\"Request\")\nbooking<-df1 %>% filter(variable==\"Booking\")\nopd<-df1 %>% filter(variable==\"OPD\")\nipd<-df1 %>% filter(variable==\"IPD\") \n\nrequest2<-df2 %>% filter(variable==\"Request\")\nbooking2<-df2 %>% filter(variable==\"Booking\")\nopd2<-df2 %>% filter(variable==\"OPD\")\nipd2<-df2 %>% filter(variable==\"IPD\") \n\n\n\nui<-fluidPage(\n  \n  titlePanel(div(h4(\"TREND GRAPH FOR REQUEST, BOOKING, OPD AND IPD IN DIFFERENT MONTH\", align = \"center\"), style = \"color:red\"),windowTitle = \"Request Analysis\"),\n  \n  sidebarPanel(\n    h4(div(\"SPECIALITY_WISE PLOT\",style=\"color:blue\")),\n    selectInput(\"Speciality\",\"1. Please select a Speciality:\",choices = levels(df1$Speciality),selected = \"Renal Sciences\"),\n    radioButtons(\"Type\",\"2. Please select a Type:\",choices = levels(df1$Category),selected = \"Domestic\"),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    h4(div(\"CITY_WISE PLOT\",style=\"color:blue\")),\n    selectInput(\"City\",\"1. Please select a City:\",choices = levels(df2$City_Name),selected = \"Mumbai\"),\n    radioButtons(\"Category\",\"2. Please select a Type:\",choices = levels(df2$Category),selected = \"Domestic\"),\n    br(),\n    br(),\n    br(),\n    br(),\n    br(),\n    br()\n  ),\n  mainPanel(\n    tabsetPanel(type=\"tab\",\n                tabPanel(\"Trend Graph\",br(),\n                         h4(dygraphOutput(\"dygraph\")),\n                         h4(textOutput(\"legendDivID\"), title = \"Legend\", collapsible = F, width=2),\n                         br(),\n                         br(),\n                         \n                         h4(dygraphOutput(\"dygraph2\"))),\n                tabPanel(\"Analysis\",fluidRow(\n                  splitLayout(cellWidths = c(\"50%\", \"50%\"), plotOutput(\"plotgraph1\"), plotOutput(\"plotgraph2\"),plotOutput(\"plotgraph3\"), plotOutput(\"plotgraph4\"))\n                ),\n                fluidRow(\n                  splitLayout(cellWidths = c(\"50%\", \"50%\"), verbatimTextOutput(\"text1\"), verbatimTextOutput(\"text2\"),verbatimTextOutput(\"text3\"), verbatimTextOutput(\"text4\"))\n                ),\n                fluidRow(\n                  splitLayout(cellWidths = c(\"50%\", \"50%\"), plotOutput(\"plotgraph5\"), plotOutput(\"plotgraph6\"),plotOutput(\"plotgraph7\"), plotOutput(\"plotgraph8\"))\n                ),\n                fluidRow(\n                  splitLayout(cellWidths = c(\"50%\", \"50%\"), verbatimTextOutput(\"text5\"), verbatimTextOutput(\"text6\"),verbatimTextOutput(\"text7\"), verbatimTextOutput(\"text8\"))\n                )\n                ),\n                tabPanel(\"Bar Plot\",h4(plotOutput(\"barplot\")),\n                         br(),\n                         br(),br(),br(),br(),br(),br(),br(),br(),\n                         h4(plotOutput(\"barplot2\"))),\n                tabPanel(\"Forecast\",plotOutput(\"forcast\")))\n  )\n)\n\n\n\n\nserver <- function(input,output){\n  selected1 <- reactive({request %>% \n      filter(Speciality==input$Speciality,Category == input$Type) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected2 <- reactive({booking %>% \n      filter(Speciality==input$Speciality,Category == input$Type) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected3 <- reactive({opd %>% \n      filter(Speciality==input$Speciality,Category == input$Type) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected4 <- reactive({ipd %>% \n      filter(Speciality==input$Speciality,Category == input$Type) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected5 <- reactive({request2 %>% \n      filter(City_Name==input$City,Category == input$Category) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected6 <- reactive({booking2 %>% \n      filter(City_Name==input$City,Category == input$Category) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected7 <- reactive({opd2 %>% \n      filter(City_Name==input$City,Category == input$Category) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  selected8 <- reactive({ipd2 %>% \n      filter(City_Name==input$City,Category == input$Category) %>% \n      group_by(Date) %>%\n      summarise(n = value)})\n  \n  bar<-reactive({df1 %>% \n      filter(Speciality==input$Speciality,Category==input$Type)\n  })\n  \n  bar2<-reactive({df2 %>% \n      filter(City_Name==input$City,Category==input$Category)\n  })\n  \n  \n  output$dygraph<-renderDygraph({\n    spe_xts <- xts(cbind(selected1()$n,selected2()$n,selected3()$n,selected4()$n), order.by = as.Date(selected1()$Date))\n    dygraph(spe_xts,xlab = \"Month (Plot For Speciality_wise)\",ylab = \"Value\")%>%\n      dySeries(\"V1\",label=\"Request\",color=\"red\", fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dySeries(\"V2\",label=\"Booking\",color=\"green\",fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dySeries(\"V3\",label=\"OPD\",color=\"purple\",fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dySeries(\"V4\",label=\"IPD\",color=\"orange\",fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dyLegend(labelsDiv = \"legendDivID\",labelsSeparateLines = T)\n    \n    \n  })\n  \n  output$dygraph2<-renderDygraph({\n    spe_xts2 <- xts(cbind(selected5()$n,selected6()$n,selected7()$n,selected8()$n), order.by = as.Date(selected5()$Date))\n    dygraph(spe_xts2,xlab = \"Month (Plot For City_wise)\",ylab = \"Value\")%>%\n      dySeries(\"V1\",label=\"Request\",color=\"red\", fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dySeries(\"V2\",label=\"Booking\",color=\"green\",fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dySeries(\"V3\",label=\"OPD\",color=\"purple\",fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dySeries(\"V4\",label=\"IPD\",color=\"orange\",fillGraph = F, strokeWidth = 3, drawPoints = T,pointSize=3)%>%\n      dyLegend(labelsDiv = \"legendDivID\",labelsSeparateLines = T)\n    \n  })\n  \n  output$plotgraph1<-renderPlot({\n    \n    \n    hist(selected1()$n,col = \"red\",main = paste(\"Histogram of Request for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  br()\n  \n  output$plotgraph2<-renderPlot({\n    \n    hist(selected2()$n,col = \"green\",main = paste(\"Histogram of Booking for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  output$plotgraph3<-renderPlot({\n    \n    hist(selected3()$n,col = \"purple\",main = paste(\"Histogram of OPD for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  output$plotgraph4<-renderPlot({\n    \n    hist(selected4()$n,col = \"orange\",main = paste(\"Histogram of IPD for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  output$text1<-renderPrint({\n    summary(selected1()$n)\n  })\n  \n  output$text2<-renderPrint({\n    summary(selected2()$n)\n  })\n  \n  output$text3<-renderPrint({\n    summary(selected3()$n)\n  })\n  \n  output$text4<-renderPrint({\n    summary(selected4()$n)\n  })\n  \n  output$plotgraph5<-renderPlot({\n    \n    \n    hist(selected5()$n,col = \"red\",main = paste(\"Histogram of Request for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  br()\n  \n  output$plotgraph6<-renderPlot({\n    \n    hist(selected6()$n,col = \"green\",main = paste(\"Histogram of Booking for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  output$plotgraph7<-renderPlot({\n    \n    hist(selected7()$n,col = \"purple\",main = paste(\"Histogram of OPD for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  output$plotgraph8<-renderPlot({\n    \n    hist(selected8()$n,col = \"orange\",main = paste(\"Histogram of IPD for\",input$Speciality,sep = \" \"),xlab = \"Range\",ylab = \"Number\")\n    \n  })\n  \n  output$text5<-renderPrint({\n    summary(selected5()$n)\n  })\n  \n  output$text6<-renderPrint({\n    summary(selected6()$n)\n  })\n  \n  output$text7<-renderPrint({\n    summary(selected7()$n)\n  })\n  \n  output$text8<-renderPrint({\n    summary(selected8()$n)\n  })\n  \n  output$barplot<-renderPlot({\n    ggplot(bar(), aes(x = as.factor(Date), y = value, fill = variable)) + \n      geom_bar(position = \"dodge\", stat = \"identity\",width = 0.6) + \n      xlab(\"Date\") + ylab(\"Value\") + \n      geom_text(aes(label = round(value, digits = 1)), position = position_dodge(width = 1), \n                vjust = -0.25, color = \"blue\", size=4,angle = 60)+ ggtitle(paste(\"Bar Plot of\",input$Speciality,\"For Request, Booking, OPD, and IPD (Speciality_Wise)\",sep=\" \")) + \n      theme(plot.title = element_text(lineheight = 1, face = \"bold\",colour = \"red\",size = 26),legend.position =\"top\") \n    \n    \n  },height=500,width=1200)\n  \n  \n  output$barplot2<-renderPlot({\n    ggplot(bar2(), aes(x = as.factor(Date), y = value, fill = variable)) + \n      geom_bar(position = \"dodge\", stat = \"identity\",width = 0.6) + \n      xlab(\"Date\") + ylab(\"Value\") + \n      geom_text(aes(label = round(value, digits = 1)), position =  position_dodge(width = 1), \n                vjust = -0.25, color = \"blue\", size = 4,angle = 60) + ggtitle(paste(\"Bar Plot of\",input$Speciality,\"For Request, Booking, OPD, and IPD (City_Wise)\",sep=\" \")) + \n      theme(plot.title = element_text(lineheight = 1, face = \"bold\",colour = \"red\",size = 26),legend.position =\"top\") \n    \n    \n  },height=500,width=1200)\n  \n  \n}\n\n\n\nshinyApp(ui= ui, server = server)\n",
    "created" : 1522215224915.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "4150048789",
    "id" : "D8516E26",
    "lastKnownWriteTime" : 1522213748,
    "last_content_update" : 1522213748863,
    "path" : "E:/DATA SCIENCE/credihealth/graph data/App2/App.R",
    "project_path" : "App.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}